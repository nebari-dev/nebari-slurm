---
 - name: Ensure restic installed
   become: true
   apt:
     name: restic
     state: latest
     update_cache: yes
     cache_valid_time: 3600

 - name: Ensure that restic backup configuration directory exists
   become: true
   file:
     path: /etc/restic
     state: directory
     mode: '0700'
     owner: root
     group: root

 - name: Restic Backup Service
   become: true
   copy:
     content: |
       {% for key, value in backup_environment.items() %}
       {{ key }}={{ value }}
       {% endfor %}
     dest: /etc/restic/credentials
     owner: root
     group: root
     mode: 0600
   register: _restic_backup_configuration

 - name: Restic Backup Service
   become: true
   copy:
     content: |
       [Unit]
       Description=Restic Backup

       [Service]
       X-RestartIfChanged=false
       EnvironmentFile=/etc/restic/credentials
       ExecStart=/usr/bin/restic backup --limit-upload=50000 /home
       ExecStartPre=/bin/bash -c "/usr/bin/restic snapshots || /usr/bin/restic init"
       RuntimeDirectory=restic-backups
       Type=oneshot
       User=root
     dest: /etc/systemd/system/restic-backup.service
     owner: root
     group: root
     mode: 0644
   register: _restic_backup_service

 - name: Restic Backup Timer
   become: true
   copy:
     content: |
       [Unit]
       Description=Restic Backup Timer

       [Timer]
       OnCalendar={{ backup_on_calendar }}
       RandomizedDelaySec={{ backup_randomized_delay }}

       [Install]
       WantedBy=timers.target
     dest: /etc/systemd/system/restic-backup.timer
     owner: root
     group: root
     mode: 0644
   register: _restic_backup_timer

 - name: Ensure restic backup service is enabled on boot
   become: true
   systemd:
     daemon_reload: true
     name: restic-backup.service
     enabled: true
     state: started

 - name: Ensure restic backup timer is enabled on boot
   become: true
   systemd:
     daemon_reload: true
     name: restic-backup.timer
     enabled: true
     state: started
