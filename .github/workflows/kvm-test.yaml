---
name: Vagrant (KVM) Tests

on:
  pull_request:
  push:
    branches:
      - "*"

env:
  # Prevents Vagrant from creating symlinks
  VAGRANT_DISABLE_VBOXSYMLINKCREATE: "1"

jobs:
  # https://github.com/jonashackt/vagrant-github-actions
  test-kvm:
    name: KVM Test
    runs-on: "cirun-runner--${{ github.run_id }}"
    steps:
      - uses: actions/checkout@v4

      - name: Cache Vagrant boxes
        uses: actions/cache@v2
        with:
          path: ~/.vagrant.d/boxes
          key: ${{ runner.os }}-vagrant-${{ hashFiles('Vagrantfile') }}
          restore-keys: |
            ${{ runner.os }}-vagrant-

      # - name: Install vagrant
      #   run: |
      #     sudo apt install -y virtualbox

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install test dependencies.
        run: sudo pip3 install ansible

      - name: Install Ansible Dependencies
        working-directory: tests/ubuntu2004-singlenode
        run: |
          ansible-galaxy collection install community.general
          ansible-galaxy collection install ansible.posix

      - name: Show Vagrant version
        run: vagrant --version

      - name: Check Libvirt status
        run: |
          virsh --version

      - name: Run vagrant up
        working-directory: tests/ubuntu2004-singlenode
        run: vagrant up --provider=libvirt

      - name: Check Vagrant status
        run: |
          vagrant status

      - name: SSH into Vagrant VM
        run: |
          vagrant ssh -c "echo 'Hello from Vagrant VM'"

      - name: Collect System Info and Metrics for Debugging
        if: success()
        run: |
          vagrant ssh -c "
          echo 'System Information:' && uname -a
          echo 'Available Disk Space:' && df -h
          echo 'Memory Usage:' && free -m
          echo 'CPU Information:' && lscpu
          echo 'Network Configuration:' && ifconfig
          echo 'Firewall Status:' && sudo ufw status
          echo 'System Logs:' && journalctl --no-pager | tail -n 100
          "

      - name: Copy inventory files to .vagrant provider directory
        run: |
          cp -r inventory.template/* tests/ubuntu2004-singlenode/.vagrant/provisioners/ansible/inventory/

      - name: Run vagrant provision
        working-directory: tests/ubuntu2004-singlenode
        run: vagrant provision

      - name: Cleanup
        if: always()
        run: |
          vagrant destroy -f
